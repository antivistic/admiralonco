% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/derive_param_bor.R
\name{derive_param_bor}
\alias{derive_param_bor}
\title{Adds a Parameter for the Best Overall Response (without confirmation)}
\usage{
derive_param_bor(
  dataset,
  dataset_adsl,
  filter_source,
  source_pd = NULL,
  source_datasets = NULL,
  reference_date,
  ref_start_window = 0,
  missing_as_ne = FALSE,
  aval_fun = admiralonco::aval_resp(),
  subject_keys = vars(STUDYID, USUBJID),
  set_values_to
)
}
\arguments{
\item{dataset}{The input dataframe from which the Best Overall Response will
be derived from and added to.

The columns \code{PARAMCD}, \code{ADT}, and \code{AVALC}and the columns specified in
\code{subject_keys} and \code{reference_date} are expected.

\emph{Permitted Values:} a \code{data.frame()} object

\emph{Required or Optional:} Required}

\item{dataset_adsl}{The ADSL input dataframe

The columns specified in \code{subject_keys} are expected.

\emph{Permitted Values:} a \code{data.frame()} object

\emph{Required or Optional:} Required}

\item{filter_source}{Filter to be applied to \code{dataset} to derive the
Best Overall Response

\emph{Required or Optional:} Required}

\item{source_pd}{Date of first progressive disease (PD)

If the parameter is specified, the observations of the input \code{dataset} for
deriving the new parameter are restricted to observations up to the
specified date. Observations at the specified date are included. For
subjects without first PD date all observations are take into account.

\emph{Permitted Values:} a \code{date_source} object (see \code{date_source()}
for details)

\emph{Default:} \code{NULL}

\emph{Required or Optional:} Optional}

\item{source_datasets}{Source dataframe to be used to calculate the
first PD date

A named list of dataframes is expected (although for BoR) only one dataframe is
needed. It links the \code{dataset_name} from \code{source_pd} with an existing dataframe.

For example if \code{source_pd = pd_date} with

\if{html}{\out{<div class="sourceCode r">}}\preformatted{pd_date <- date_source(
  dataset_name = "adrs",
  date = ADT,
  filter = PARAMCD == PD
)
}\if{html}{\out{</div>}}

and the actual response dataframe in the script is \code{myadrs}, \code{source_datasets = list(adrs = myadrs)} should be specified.

\emph{Required or Optional:} Optional}

\item{reference_date}{Reference date

The reference date is used along with \code{ref_start_window} to determine those
records that occur before and after \code{ADT} (see Details section for further
information). Usually it is treatment start date (\code{TRTSDT}) or
randomization date (\code{RANDDT}).

\emph{Permitted Values:} a numeric date column

\emph{Required or Optional:} Required}

\item{ref_start_window}{Stable disease time window

The ref_start_window is used along with \code{reference_date} to determine those
records that occur before and after \code{ADT} (see Details section for further
information).

\emph{Permitted Values:} a non-negative numeric scalar

\emph{Default:} 0

\emph{Required or Optional:} Optional}

\item{missing_as_ne}{Consider no assessments as \code{"NE"}?

If the argument is set to \code{TRUE}, the response is set to \code{"NE"} for
subjects in \code{dataset_adsl} without an assessment in the \code{dataset} after the
filter has been applied. Otherwise, the response is set to \code{"MISSING"}
for these subjects.

\emph{Permitted Values:} a logical scalar

\emph{Default:} \code{FALSE}

\emph{Required or Optional:} Required}

\item{aval_fun}{Function to map character analysis value (\code{AVALC}) to numeric
analysis value (\code{AVAL})

The (first) argument of the function must expect a character vector and the
function must return a numeric vector.

\emph{Default:} \code{admiralonc::aval_resp} (see \code{?admiralonc::aval_resp()})

\emph{Required or Optional:} Required}

\item{subject_keys}{Columns to uniquely identify a subject

A list of symbols created using \code{vars()}.

\emph{Permitted Values:} an \code{vars} object

\emph{Default:} \code{vars(STUDYID, USUBJID)}

\emph{Required or Optional:} Required}

\item{set_values_to}{New columns to set

A named list returned by \code{vars()} defining the columns to be set for the
new parameter, e.g. \code{vars(PARAMCD = "CBOR", PARAM = "Best Overall Response")} is expected. The values must be symbols, character strings,
numeric values, or \code{NA}.

\emph{Required or Optional:} Required}
}
\value{
The dataframe passed in the \code{dataset} argument with additional columns and/or
rows as set in the \code{set_values_to} argument.
}
\description{
\if{html}{\out{<div class="sourceCode">}}\preformatted{Derives Best Overall Response (optionally) up to first Progressive Disease
}\if{html}{\out{</div>}}
}
\details{
Calculates the best overall response (BOR) parameter, as detailed below.

Records after PD can be removed using the source_pd and source_datasets
arguments.

Note:
\enumerate{
\item All \code{CR}, \code{PR} and \code{PD} response records are considered for Best Overall Response.
\item All \code{SD} or \code{NON-CR/NON-PD} records where \code{ADT} >= \code{reference_date} +
\code{ref_start_window} are also considered for Best Overall Response.
\item Patients with \strong{ONLY} \code{SD} or \code{NON-CR/NON-PD} records where \code{ADT} <
\code{reference_date} + \code{ref_start_window} would give Best Overall Response of \code{NE}.
\item The Best Response, by \code{subject_keys} of the records in steps 1 to 3, is then
selected in the following order of preference:
}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{            AVALC \%in\% c("CR") ~ 1,
            AVALC \%in\% c("PR") ~ 2,
            AVALC \%in\% c("SD") ~ 3,
            AVALC \%in\% c("NON-CR/NON-PD") ~ 4,
            AVALC \%in\% c("PD") ~ 5,
            AVALC \%in\% c("NE") ~ 6,
            is.null(AVALC) ~ 7)) \%>\%
}\if{html}{\out{</div>}}
\enumerate{
\item The \code{AVAL} column is added and set using the \code{aval_fun(AVALC)} function
\item The columns specified by the \code{set_values_to} parameter and records
are added to the dataframe passed into the \code{dataset} argument
}

Also Note: All columns from the input dataset are kept. For subjects with no records in
the input dataset (after the filter is applied) all columns are kept from ADSL which are
also in the input dataset.  Columns which are not to be populated for the new parameter
or populated differently (e.g., RSSTRESC, VISIT, PARCATy, ANLzzFL, ...) should be
overwritten using the \code{set_values_to} parameter.
}
\examples{

library(magrittr)
library(dplyr)
library(tibble)
library(lubridate)

# Create ADSL dataset
adsl <- tribble(
  ~USUBJID, ~TRTSDTC,
  "1",      "2020-01-01",
  "2",      "2019-12-12",
  "3",      "2019-11-11",
  "4",      "2019-12-30",
  "5",      "2020-01-01",
  "6",      "2020-02-02",
  "7",      "2020-02-02",
  "8",      "2020-04-01"
) \%>\%
  mutate(
    TRTSDT = ymd(TRTSDTC),
    STUDYID = "XX1234"
  )

# Create ADRS dataset
ovr_obs <- tribble(
  ~USUBJID, ~ADTC,        ~AVALC,
  "1",      "2020-01-01", "PR",
  "1",      "2020-02-01", "CR",
  "1",      "2020-02-16", "NE",
  "1",      "2020-03-01", "CR",
  "1",      "2020-04-01", "SD",
  "2",      "2020-01-01", "SD",
  "2",      "2020-02-01", "PR",
  "2",      "2020-03-01", "SD",
  "2",      "2020-03-13", "CR",
  "3",      "2019-11-12", "CR",
  "3",      "2019-12-02", "CR",
  "3",      "2020-01-01", "SD",
  "4",      "2020-01-01", "PR",
  "4",      "2020-03-01", "SD",
  "4",      "2020-04-01", "SD",
  "4",      "2020-05-01", "PR",
  "4",      "2020-05-15", "NON-CR/NON-PD",
  "5",      "2020-01-01", "PR",
  "5",      "2020-01-10", "SD",
  "5",      "2020-01-20", "PR",
  "5",      "2020-05-15", "NON-CR/NON-PD",
  "6",      "2020-02-06", "PR",
  "6",      "2020-02-16", "CR",
  "6",      "2020-03-30", "PR",
  "6",      "2020-04-12", "PD",
  "6",      "2020-05-01", "CR",
  "6",      "2020-06-01", "CR",
  "7",      "2020-02-06", "PR",
  "7",      "2020-02-16", "CR",
  "7",      "2020-04-01", "NE"
) \%>\%
  mutate(PARAMCD = "OVR")

pd_obs <-
  bind_rows(tribble(
    ~USUBJID, ~ADTC,        ~AVALC,
    "2",      "2020-03-01", "Y",
    "4",      "2020-02-01", "Y"
  ) \%>\%
    mutate(PARAMCD = "PD"))

adrs <- bind_rows(ovr_obs, pd_obs) \%>\%
  mutate(
    ADT = ymd(ADTC),
    STUDYID = "XX1234"
  ) \%>\%
  select(-ADTC) \%>\%
  derive_vars_merged(
    dataset_add = adsl,
    by_vars     = vars(STUDYID, USUBJID),
    new_vars    = vars(TRTSDT)
  )

pd_date <- date_source(
  dataset_name = "adrs",
  date         = ADT,
  filter       = PARAMCD == "PD"
)

aval_fun_pass <- function(arg) {
  case_when(
    arg == "CR" ~ 11,
    arg == "PR" ~ 22,
    arg == "SD" ~ 33,
    arg == "NON-CR/NON-PD" ~ 44,
    arg == "PD" ~ 55,
    arg == "NE" ~ 66,
    arg == "MISSING" ~ 77,
    TRUE ~ NA_real_
  )
}

# Derive best overall response parameter
derive_param_bor(
  adrs,
  dataset_adsl = adsl,
  filter_source = PARAMCD == "OVR",
  source_pd = pd_date,
  source_datasets = list(adrs = adrs),
  aval_fun = aval_fun_pass,
  reference_date = TRTSDT,
  ref_start_window = 28,
  set_values_to = vars(
    PARAMCD = "BOR",
    PARAM = "Best Overall Response"
  )
) \%>\%
  filter(PARAMCD == "BOR")
}
\author{
Stephen Gormley
}
\keyword{ADRS}
